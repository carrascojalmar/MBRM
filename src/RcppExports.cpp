// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Kappas
NumericMatrix Kappas(IntegerVector y);
RcppExport SEXP _MBRM_Kappas(SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(Kappas(y));
    return rcpp_result_gen;
END_RCPP
}
// dBer_LGG
double dBer_LGG(NumericVector theta, NumericMatrix X, IntegerVector y, bool return_log);
RcppExport SEXP _MBRM_dBer_LGG(SEXP thetaSEXP, SEXP XSEXP, SEXP ySEXP, SEXP return_logSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type return_log(return_logSEXP);
    rcpp_result_gen = Rcpp::wrap(dBer_LGG(theta, X, y, return_log));
    return rcpp_result_gen;
END_RCPP
}
// lvero
double lvero(NumericVector theta, List X_list, List y_list);
RcppExport SEXP _MBRM_lvero(SEXP thetaSEXP, SEXP X_listSEXP, SEXP y_listSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< List >::type X_list(X_listSEXP);
    Rcpp::traits::input_parameter< List >::type y_list(y_listSEXP);
    rcpp_result_gen = Rcpp::wrap(lvero(theta, X_list, y_list));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MBRM_Kappas", (DL_FUNC) &_MBRM_Kappas, 1},
    {"_MBRM_dBer_LGG", (DL_FUNC) &_MBRM_dBer_LGG, 4},
    {"_MBRM_lvero", (DL_FUNC) &_MBRM_lvero, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_MBRM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
